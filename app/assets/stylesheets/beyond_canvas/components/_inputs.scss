$controls: checkbox, radio;

#{$all-text-inputs},
select {
  background-color: var(--inputField-background);
  border: 1px solid var(--inputField-border);
  border-radius: var(--inputField-borderRadius);
  box-sizing: border-box;
  order: 2;
  outline: none;
  padding: 6px 8px;
  width: 100%;

  &:disabled {
    background-color: var(--inputField-background-disabled) !important;
    color: var(--inputField-text-disabled);
    opacity: 1;
  }
}

#{$all-text-inputs} {
  line-height: 1;
}

#{$all-text-inputs-focus},
select:focus {
  border-color: var(--inputField-border-focus);
}

select {
  @include prefixer(appearance, none, ("webkit", "moz"));

  background-image: linear-gradient(45deg, transparent 50%, gray 50%), linear-gradient(135deg, gray 50%, transparent 50%), linear-gradient(to right, $input-border-color, $input-border-color);
  background-position: calc(100% - 19px) calc(1em + -1px), calc(100% - 15px) calc(1em + -1px), calc(100% - 2.5em) 0.5em;
  background-size: 4px 4px, 4px 4px, 0 0;
  background-repeat: no-repeat;
}

textarea {
  min-height: 100px;
  resize: vertical;
}

#{$all-text-inputs},
select {
  &.input__error {
    border-left: 2px solid var(--formGroup-validation-error);

    &:focus {
      border: 1px solid var(--inputField-border-focus);
    }
  }
}

fieldset {
  legend {
    color: var(--workspace-headline);
    font-size: 16px;
    font-weight: bold;
    margin-bottom: 6px;
  }

  .form__row {
    margin-bottom: 8px !important;
  }
}

.input {
  &__label {
    color: var(--formGroup-label);
    display: block;
    font-size: 13px;
    font-weight: bold;

    &--disabled {
      color: var(--check-disabled-text);
    }
  }

  &__hint {
    color: var(--inputField-hint-text);
    font-size: 13px;
    margin-top: 1px;
  }

  &__pre,
  &__post {
    background-color: var(--inputField-background-disabled);
    border: 1px solid var(--inputField-border);
    box-sizing: border-box;
    color: var(--inputField-text-disabled);
    line-height: 1;
    outline: none;
    padding: 6px 8px;
  }

  &__pre {
    border-bottom-left-radius: var(--inputField-borderRadius);
    border-top-left-radius: var(--inputField-borderRadius);
    border-right: 0;
    order: 1;

    ~ input,
    ~ select {
      @include border-left-radius(0);
    }
  }

  &__post {
    border-bottom-right-radius: var(--inputField-borderRadius);
    border-top-right-radius: var(--inputField-borderRadius);
    border-left: 0;
    order: 10;

    ~ input,
    ~ select {
      @include border-right-radius(0);
    }
  }

  @each $control in $controls {

    &__#{$control} {

      &__control {
        cursor: pointer;
      }

      &--unchecked {
        background: #fff;

        path {
          fill: var(--uncheck-color);
        }
      }

      &--checked {
        background: #fff;

        path {
          fill: var(--check-color);
        }
      }

      &:not(:checked) + .input__#{$control}__control .input__#{$control}--unchecked,
      &:checked + .input__#{$control}__control .input__#{$control}--checked {
        display: block !important;
      }

      &:disabled {
        ~ div .input__label,
        ~ div .input__hint {
          cursor: default;
          color: var(--check-disabled-text);
        }

        + .input__#{$control}__control .input__#{$control}--unchecked,
        + .input__#{$control}__control .input__#{$control}--checked {
          cursor: default;

          path {
            fill: var(--check-disabled-icon);
          }
        }
      }

      ~ div .input__label {
        padding-left: 7px;
      }

      ~ div .input__hint {
        padding-left: 7px;
        padding-top: 4px;
      }

      ~ div .input__label,
      ~ div .input__hint {
        line-height: 1;
        cursor: pointer;
      }
    }
  }

  &__toggle {

    &:checked + .input__toggle__control svg path:nth-of-type(1),
    &:not(:checked) + .input__toggle__control svg path:nth-of-type(2) {
      opacity: 1;
    }

    &:checked + .input__toggle__control svg path {
      transform: translateX(19.6px);
    }

    &:disabled {
      + .input__toggle__control {
        cursor: default;

        svg {

          rect {
            fill: var(--inputField-background-disabled);
          }

          path {
            fill: var(--check-disabled-icon);
          }
        }
      }

      ~ div .input__label,
      ~ div .input__hint {
        cursor: default;
        color: var(--check-disabled-text);
      }
    }

    &__control {
      cursor: pointer;
      width: 47px;
      height: 26px;

      svg {
        width: 47px;
        height: 26px;

        rect {
          stroke: var(--flipSwitch-border);
          fill: transparent;
        }

        path {
          transition: 0.3s;
          opacity: 0;

          &:nth-of-type(1) {
            fill: var(--flipSwitch-checked-background);
          }

          &:nth-of-type(2) {
            fill: var(--flipSwitch-unchecked-background);
          }
        }
      }
    }

    ~ div .input__label {
      color: var(--flipSwitch-label);
    }

    ~ div .input__hint {
      color: var(--flipSwitch-text);
      padding-top: 4px;
    }

    ~ div .input__label,
    ~ div .input__hint {
      padding-left: 10px;
      line-height: 1;
      cursor: pointer;
    }
  }

  &__file {
    display: flex;
    align-items: center;

    &__control {
      display: inline-block;
    }

    &__text {
      display: flex;
      margin-left: 20px;
      font-weight: 500;
      text-overflow: ellipsis;
      overflow: hidden;
      white-space: nowrap;
      max-width: 200px;
    }

    &__icon {
      color: $main-color;
      width: 14px;
      margin-right: 5px;
    }
  }
}

label.input__error {
  @include padding(5px 7px);
  @include position(absolute, calc(100% + 8px) null null 0);

  background-color: var(--formGroup-validation-error);
  border-radius: var(--formGroup-validation-borderRadius);
  color: var(--formGroup-validation-text);
  font-size: 13px;
  z-index: 1;

  &::before {
    @include position(absolute, null null 100% 8px);
    border-style: solid;
    height: 0;
    width: 0;
    border-color: transparent transparent var(--formGroup-validation-error);
    border-width: 0 6px 6px;
    content: '';
  }
}
